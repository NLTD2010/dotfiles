(defpoll dunst-history :interval "250ms" "dunstctl history")
(defwidget notification-history []
	(revealer :transition "crossfade" :duration "500ms" :reveal noti
		(scroll :class "notification-scroller" :vscroll "true"
			(box :class "notification-history" :orientation "v"
				(for entry in {dunst-history["data"][0]}
					(notification :class 'notif-${entry["id"]["data"]}'
						:title {entry["appname"]["data"]}
						:body '${entry["summary"]["data"]}\\n${entry["body"]["data"]}'
						:icon {entry["appname"]["data"] == "Spotify" ? "../../.cache/dunst/${entry['id']['data']}.png" : (entry["icon_path"]["data"] ?: "../dunst/assets/notification/fallback-notif.png")}
					)
				)
			)
		)
	)
)
(defvar noti false)

(defwidget notification [title body icon]
	(eventbox :onrightclick "${EWW_CMD} update noti=false; sleep 0.270; ${EWW_CMD} close notification-history; pkill openEwwPopup.sh"
		(box :class "notification" :orientation "v" :space-evenly "false"
			(box :class "notification-title"
				(label :class "notification-title-text" :halign "start" :text title)
				(box :halign "end"
					(button :class "notification-close"
					:onclick "${EWW_CMD} update noti=false; sleep 0.270; ${EWW_CMD} close notification-history; pkill openEwwPopup.sh"
					"î…Œ")
				)
			)
			(box :class "notification-body" :space-evenly "false" :orientation "h"
				(box :class "notification-image" :orientation "h" :valign "center" :style "background-image: url('${icon}')")
				(box :orientation "v"
					(label :class "notification-body-text" :wrap "true" :limit-width 60 :text body)
				)
			)
		)
	)
)
