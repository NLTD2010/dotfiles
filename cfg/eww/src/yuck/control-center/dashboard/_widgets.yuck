(defwidget dashboard []
	(box :class "dashboard-window" :space-evenly "false"  :orientation "h"
		(box :class "dashboard-box" :orientation "v" :space-evenly "false"
			(box :class "first-row" :orientation "h"
				(box :class "column-one" :orientation "v"
					(box :class "avatar"
						(box :class "avatar-image")
					)
				)
				(box :class "column-two" :orientation "v" :space-evenly "false"
					(box :class "weather" :orientation "v" :space-evenly "false"
						(label :class "weather-desc" :text "${weather_desc}" :halign "start")
						(label :class "weather-temp" :text "${weather_temp}°C (${weather_feels_like}°C)" :halign "start")
					)
					(box :class "date" :orientation "v" :space-evenly "false"
						(label :class "weekday" :text "${weekday}" :halign "start")
						(label :class "monthday" :text "${monthday}" :halign "start")
					)
				)
			)
			(box :class "second-row" :orientation "h"
				(box :class "music-player" :orientation "h" :space-evenly "false"
					(box :class "song-art" :orientation "v" :style "background-image: url('${art}')"
						(box :class "music-info" :orientation "v" :space-evenly "false" :hexpand "false" :vexpand "false"
							(label :class "now-playing" :halign "start" :text player_status_text)
							(label :class "song-title" :halign "start"
								:text song_title
								:limit-width 23)
							(label :class "song-artist" :halign "start"
								:text song_artist
								:limit-width 35)
							(box :orientation "h"
								(label :class "song-position" :halign "start"
									:text song_position)
								song_art
							)
						)
					)
					(box :class "song-controls" :orientation "v"
						(button :onclick "playerctl previous" "")
						(button :class "play-pause" :onclick "playerctl play-pause" player_status)
						(button :onclick "playerctl next" "")
					)
				)
			)
			(box :class "third-row" :orientation "h" :space-evenly "false"
				(box :class "system-info-scale" :orientation "h" :space-evenly "false"
					(box :class "ram" :orientation "v"  :space-evenly "false"
						(label :class "ram-usage" :text "RAM")
						(circular-progress :class "ram-progress"
							:value used_ram
							:thickness 6
							:clockwise "true"
							:tooltip "Used RAM: ${used_ram}%" 
							(label :class "ram-icon" :text "")
						)
					)
				)
				(box :class "system-info" :orientation "h" :space-evenly "false"
					(box :class "volume" :orientation "v" :space-evenly "false"
						(label :class "volume-icon" :text "")
						(scale :min 0
							:max 101
							:value volume
							:orientation "v"
							:flipped true
							:tooltip "Volume: ${volume}%"
							:onchange "amixer -D pulse sset Master {}%"
							:class "volbar"
						)
					)
					(box :class "brightness" :orientation "v" :space-evenly "false"
						(label :class "brightness-icon" :text "")
						(scale :min 0
							:max 101
							:value brightness
							:orientation "v"
							:flipped true
							:tooltip "Brightness: ${brightness}%"
							:onchange "brightnessctl set {}%"
							:class "bribar"
						)
					)
					(box :class "mic" :orientation "v" :space-evenly "false"
						(label :class "mic-icon" :text "")
						(scale :min 0
							:max 101
							:value micro
							:orientation "v"
							:flipped true
							:tooltip "Microphone Volume: ${micro}%"
							:onchange "amixer -D pulse sset Capture {}%"
							:class "micbar"
						)
					)
				)
			)
			(box :class "fourth-row" :orientation "v" :space-evenly "false"
				(label :class "system-btn-text" :text "Quick Utilities" :halign "start")
				(box :class "system-btn" :orientation "v" :space-evenly "true"
					(box :orientation "h"
						(button :class "scrot-btn"
							:tooltip "Screenshot"
							:onclick "sh ./scripts/dashActions.sh scrot"
							""
						)
						(button :class "jeff-btn"
							:style "background-color: ${jeff_status}"
							:tooltip "Capture Screen"
							:onclick "sh ./scripts/dashActions.sh jeff"
							""
						)
						(button :class "redshift-btn"
							:style "background-color: ${redshift_status}"
							:tooltip "Night Light"
							:onclick "sh ./scripts/getRedshift.sh toggle"
							""
						)
						(button :class "dnd-btn"
							:style "background-color: ${dnd_status}"
							:onclick "sh ./scripts/dashActions.sh dnd"
							:tooltip "Do Not Disturb"
							""
						)
					)
				)
			)
		)
	)
)
(defvar dash false)
